/* static/css/login_styles.css */
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Quicksand', sans-serif;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #000;
    overflow: hidden; 
}

/* Contenedor Animación Fondo Hexagonal */
section {
    position: absolute;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center; /* Center lines of hexagons */
    align-content: center; /* Center the whole block of lines vertically */
    flex-wrap: wrap;
    overflow: hidden;
    gap: 0; /* Ensure no extra gap from flex container */
    /* padding-top: 2vw; */ /* Removed, let align-content handle vertical centering */
    /* padding-left: 1vw; */ /* Removed, let justify-content handle horizontal centering of lines */
    /* padding-right: 1vw; */ /* Removed */
    z-index: 1;
    /* background-color: #0a0a0a; */ /* Optional: slightly different background for the section */
}

/* Estilos para cada HEXÁGONO */
section span {
    position: relative;
    z-index: 2;
    display: block; 

    /* --- Hexagon Size and Gap Variables --- */
    /* --hex-width is the CSS width of the hexagon (vertex to vertex distance for pointy-top) */
    /* --hex-gap is the visual separation between hexagons */
    
    /* Default for larger screens */
    --hex-width: 60px; 
    --hex-gap: 1px;  

    /* Calculated height based on width for a regular hexagon (H = W * sqrt(3)/2) */
    --hex-height: calc(var(--hex-width) * 0.8660254); 

    width: var(--hex-width);
    height: var(--hex-height);
    
    background-color: #181818; /* Hexagon fill color */
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);

    /* --- Margins for Honeycomb-like Tiling --- */
    /* Horizontal margin: half gap on each side */
    margin-left: calc(var(--hex-gap) / 2);
    margin-right: calc(var(--hex-gap) / 2);
    
    /* Vertical margin:
       For pointy-top hexagons, rows overlap by 1/4 of their height.
       The vertical distance between centers of hexagons in adjacent rows is H * 0.75.
       So, margin-bottom should be (H * 0.75 + gap) - H = (H * -0.25 + gap).
       This pulls the next row up to interlock vertically.
    */
    margin-bottom: calc(var(--hex-height) * -0.25 + var(--hex-gap));
    
    transition: background-color 0.1s ease-out, 
                transform 0.1s ease-out, 
                filter 0.1s ease-out;
}

/* Staggering attempt for even rows - this can be tricky with justify-content: center */
/* To make this work more predictably, you'd often need a fixed width container */
/* or more complex nth-child selectors based on items per row. */
/* For now, this provides a slight alternating offset. */
/*
section span:nth-child(odd) {
    margin-left: calc(var(--hex-width) * 0.25 + var(--hex-gap)); 
}
*/
/* A simpler approach for the current flex setup is to accept non-staggered rows, */
/* focusing on vertical tessellation and gaps. */


section span:hover {
    background-color: #ff0000; /* Red hover color */
    transform: scale(1.15);    /* Slightly larger scale for more impact */
    z-index: 3;                /* Bring hovered hexagon to the front */
    
    /* Glow effect using filter: drop-shadow() which respects clip-path */
    /* Multiple shadows can create a softer, more prominent glow */
    filter: drop-shadow(0 0 6px rgba(255, 50, 50, 0.9)) 
            drop-shadow(0 0 12px rgba(255, 0, 0, 0.7));
            
    transition-duration: 0.05s; /* Faster reaction on hover */
}


/* --- Media Queries for Responsive Hexagon Sizes --- */
@media (min-width: 1600px) { /* Very large screens */
    section span {
        --hex-width: 70px;
        --hex-gap: 2px;
    }
}

@media (max-width: 1200px) { /* Desktops */
    section span {
        --hex-width: 60px;
        --hex-gap: 1px;
    }
}

@media (max-width: 900px) { /* Tablets */
    section span {
        --hex-width: 50px; 
        --hex-gap: 1px;  
    }
}

@media (max-width: 600px) { /* Mobile phones */
    section span {
        --hex-width: 40px; 
        --hex-gap: 1px;  
    }
    section .signin {
        width: 90%;
        padding: 20px;
    }
    section .signin .content h2 {
        font-size: 1.5em;
    }
}
/* ... (Rest of the .signin, .alert, .close styles remain unchanged) ... */


/* Formulario de Inicio de Sesión */
section .signin {
    position: absolute; 
    top: 50%;          
    left: 50%;         
    transform: translate(-50%, -50%); 
    width: 420px; 
    background: #222;
    z-index: 1000;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 25px; 
    border-radius: 8px; 
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.9);
}

section .signin .content {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0px; 
}

section .signin .content h2 {
    font-size: 2em;
    color: #ff0000;
    text-transform: uppercase;
    margin-top: 15px; 
    margin-bottom: 25px; 
    text-align: center;
}

section .signin .content .form {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 25px;
}

section .signin .content .form .inputBox {
    position: relative;
    width: 100%;
}

section .signin .content .form .inputBox input {
    position: relative;
    width: 100%;
    background: #333;
    border: none;
    outline: none;
    padding: 25px 10px 7.5px;
    border-radius: 4px;
    color: #fff;
    font-weight: 500;
    font-size: 1em;
}

section .signin .content .form .inputBox i {
    position: absolute;
    left: 0;
    padding: 15px 10px;
    font-style: normal;
    color: #aaa;
    transition: 0.5s;
    pointer-events: none;
}

.signin .content .form .inputBox input:focus~i,
.signin .content .form .inputBox input:valid~i {
    transform: translateY(-7.5px);
    font-size: 0.8em;
    color: #fff;
}

.signin .content .form .links {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.signin .content .form .links a {
    color: #fff;
    text-decoration: none;
}

.signin .content .form .links a:nth-child(2) {
    color: #ff0000;
    font-weight: 600;
}

.signin .content .form .inputBox input[type="submit"] {
    padding: 10px;
    background: #ff0000;
    color: #000;
    font-weight: 600;
    font-size: 1.35em;
    letter-spacing: 0.05em;
    cursor: pointer;
}

input[type="submit"]:active {
    opacity: 0.6;
}

/* Estilos de Alerta (para mensajes flash) */
.alert {
    position: relative;
    padding: .75rem 1.25rem;
    margin-bottom: 1rem;
    border: 1px solid transparent;
    border-radius: .25rem;
    color: #fff; 
    z-index: 1001; 
    width: 100%; 
}
/* --- Inicio: Corrección para botón de cierre de alerta --- */
.alert .close {
    padding: 0.5rem 1rem;
    margin: -0.75rem -1.25rem -0.75rem auto;
    background-color: transparent;
    border: none;
    width: auto;
    height: auto;
    box-shadow: none;
    font-size: 1.5rem;
    line-height: 1;
    float: right;
    color: #000;
    opacity: 0.7;
    text-shadow: none;
    position: relative;
    top: 0;
    right: 0;
}

.alert .close:hover {
    opacity: 1;
    color: #000;
}

.alert .close span {
    display: inline;
}
/* --- Fin: Corrección para botón de cierre de alerta --- */

.alert-danger {
    color: #721c24;
    background-color: #f8d7da;
    border-color: #f5c6cb;
}

.alert-success {
    color: #155724;
    background-color: #d4edda;
    border-color: #c3e6cb;
}

.alert-info {
    color: #0c5460;
    background-color: #d1ecf1;
    border-color: #bee5eb;
}